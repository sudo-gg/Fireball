geom_point(aes(colour=drv),size=trans)
mpg %>% ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))
mpg %>% ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth()
summary(mpg)
mpg %>% ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(colour=year)
mpg %>% ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(colour=year)
mpg %>% ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth()
mpg %>% ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth()+
facet_wrap(~year, nrow=1)
mpg %>% filter(cty<25) %>% # easy to filter when piping
ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth()+
facet_wrap(~year, nrow=1)+
labs(x="Engine size",y="MPG in the city", title="Fuel efficiency")+
theme_minimal()
mpg %>% filter(cty<25) %>% # easy to filter when piping
ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(method=lm)+
facet_wrap(~year, nrow=1)+
labs(x="Engine size",y="MPG in the city", title="Fuel efficiency")+
theme_minimal()
mpg %>% filter(cty<25) %>% # easy to filter when piping
ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(method=lm)+
facet_wrap(~year, nrow=2)+
labs(x="Engine size",y="MPG in the city", title="Fuel efficiency")+
theme_minimal()
mpg %>% filter(cty<25) %>% # easy to filter when piping
ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(method=lm)+
facet_wrap(~year, nrow=3)+
labs(x="Engine size",y="MPG in the city", title="Fuel efficiency")+
theme_minimal()
mpg %>% filter(cty<25) %>% # easy to filter when piping
ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(method=lm)+
facet_wrap(~year, nrow=1)+
labs(x="Engine size",y="MPG in the city", title="Fuel efficiency")+
theme_minimal()
mpg %>% filter(cty<25) %>% # easy to filter when piping
ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(method=lm)+
facet_wrap(~year)+
labs(x="Engine size",y="MPG in the city", title="Fuel efficiency")+
theme_minimal()
mpg %>% filter(cty<25) %>% # easy to filter when piping
ggplot(aes(displ,cty)) +
geom_point(aes(colour=drv,size=trans))+
geom_smooth(method=lm)+
facet_wrap(~year, nrow=2)+
labs(x="Engine size",y="MPG in the city", title="Fuel efficiency")+
theme_minimal()
# Count the number of meteorites in each lat/lon band
band_counts <- df %>%
group_by(lat_band, lon_band) %>%
summarise(count = n())
# Function to categorize lat/lon into bands
calculate_bands <- function(df, lat_band_size = 20, lon_band_size = 20) {
# Cut latitude into bands
df$lat_band <- cut(
df$`Latitude (deg)`,
breaks = seq(-90, 90, by = lat_band_size),
include.lowest = T
)
# Cut longitude into bands
df$lon_band <- cut(
df$`Longitude (deg)`,
breaks = seq(-180, 180, by = lon_band_size),
include.lowest = T
)
# Count the number of meteorites in each lat/lon band
band_counts <- df %>%
group_by(lat_band, lon_band) %>%
summarise(count = n())
#arrange(desc(count))
return(band_counts)
}
calculate_bands(df)
write.csv(calculate_bands(df),"asbdsf.csv")
heatmap2 <- ggplot(df, aes(x = `Longitude (deg)`, y = `Latitude (deg)`)) +
geom_bin2d(bins = 30) +  # Adjust 'bins' to control the number of squares
scale_fill_gradient(low = "lightblue", high = "red") +  # Color gradient for count of impacts
labs(title = "Meteorite Impact Locations", x = "Longitude (deg)", y = "Latitude (deg)") +
theme_minimal()
heatmap2
density_df <- density_df %>%
arrange(desc(Density))
density_df
# Does a 2D kernel density estimation
heatmap <- ggplot(df, aes(x = `Longitude (deg)`, y = `Latitude (deg)`)) +
stat_density2d(aes(fill = ..level..), geom = "polygon", alpha = 0.7) +
scale_fill_gradient(low = "yellow", high = "red") +  # Gradient for density
labs(title = "Meteorite Impact Flux (Density Heatmap)", x = "Longitude (deg)", y = "Latitude (deg)") +
theme_minimal()
heatmap
df_clean <- df %>%
select(`Velocity (km/s)`,`Altitude (km)`) %>%
filter(!is.na(`Velocity (km/s)`), !is.na(`Altitude (km)`)) %>%
view()
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/DataAnalysisFile.R")
df_clean <- df %>%
select(`Velocity (km/s)`,`Altitude (km)`) %>%
filter(!is.na(`Velocity (km/s)`), !is.na(`Altitude (km)`)) %>%
view()
# Remove rows with missing or infinite values in Longitude or Latitude
df_clean2 <- df[!is.na(df$`Longitude (deg)`) | !is.na(df$`Latitude (deg)`)]
tail(df_clean2)
kde <- kde2d(df_clean2$`Longitude (deg)`, df_clean2$`Latitude (deg)`, n = 100)
df_clean <- df %>%
select(`Velocity (km/s)`,`Altitude (km)`) %>%
filter(!is.na(`Velocity (km/s)`), !is.na(`Altitude (km)`)) %>%
view()
df_clean <- df %>%
select(`Velocity (km/s)`,`Altitude (km)`) %>%
filter(!is.na(`Velocity (km/s)`), !is.na(`Altitude (km)`)) %>%
view()
View(df_clean2)
View(df_clean)
df_clean <- df %>%
select(`Velocity (km/s)`,`Altitude (km)`) %>%
filter(!is.na(`Velocity (km/s)`), !is.na(`Altitude (km)`)) %>%
view()
head(df_clean)
write.csv(df_clean,"VelAlt.csv")
View(df)
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/DataAnalysisFile.R")
summary(msleep)
msleep
View(data)
msleep %>% drop_na(vore) %>% # exclude na from vore only as to not skew data
ggplot(aes(x=vore))+
geom_bar(fill="#97B3C6")+
theme_bw()+
labs(x="Vore",y=NULL,title="Number of observations per order")
library(tidyverse)
msleep %>% drop_na(vore) %>% # exclude na from vore only as to not skew data
ggplot(aes(x=vore))+
geom_bar(fill="#97B3C6")+
theme_bw()+
labs(x="Vore",y=NULL,title="Number of observations per order")
?fct_infreq
View(df)
msleep %>% ggplot(aes(awake))+
geom_histogram(binwidth = 2, fill="#C777FF")+ # binwidth groups more together
theme_bw()+
labs(x= "Total sleep", y=NULL, title="Histogram of total sleep")
msleep %>% ggplot(aes(awake))+
geom_histogram(binwidth = 2, fill="#C777FF",aes(colour=vore))+ # binwidth groups more together
theme_bw()+
labs(x= "Total sleep", y=NULL, title="Histogram of total sleep")
msleep %>% ggplot(aes(awake))+
geom_histogram(binwidth = 2,aes(colour=vore))+ # binwidth groups more together
theme_bw()+
labs(x= "Total sleep", y=NULL, title="Histogram of total sleep")
msleep %>% filter(bodywt < 2) %>%
ggplot(aes(bodywt, brainwt))+
geom_point(aes(color=sleep_total,size=awake))+
geom_smooth()+
labs(x="Body Weight", y="Brain Weight",title="Brain and body weight")
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/GGplotPractice.R")
BOD
msleep %>% filter(bodywt < 2) %>%
ggplot(aes(bodywt, brainwt))+
geom_point(aes(color=sleep_total,size=awake))+
geom_smooth()+
labs(x="Body Weight", y="Brain Weight",title="Brain and body weight")
msleep %>% filter(bodywt < 2) %>%
ggplot(aes(bodywt, brainwt))+
geom_point(aes(colour=sleep_total,size=awake))+
geom_smooth()+
labs(x="Body Weight", y="Brain Weight",title="Brain and body weight")
# Line graph (two numeric one category)
Orange
msleep %>% ggplot(aes(awake))+
geom_histogram(binwidth = 2, aes(colour=vore))+ # binwidth groups more together
theme_bw()+
labs(x= "Total sleep", y=NULL, title="Histogram of total sleep")
Orange %>% filter(tree != "2") %>%
ggplot(Tree != "2") %>%
ggplot(aes(age,circumference))+
geom_point()+
geom_smooth()+
facet_wrap(~Tree)+
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% filter(tree == "2") %>%
ggplot(Tree != "2") %>%
ggplot(aes(age,circumference))+
geom_point()+
geom_smooth()+
facet_wrap(~Tree)+
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% filter(Tree == "2") %>%
ggplot(Tree != "2") %>%
ggplot(aes(age,circumference))+
geom_point()+
geom_smooth()+
facet_wrap(~Tree)+
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% filter(Tree == "2") %>%
ggplot(Tree != "2") %>%
ggplot(aes(age,circumference))+
geom_point()+
geom_smooth()+
facet_wrap(~Tree)+
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% filter(Tree != "2") %>%
ggplot(aes(age,circumference))+
geom_point()+
geom_smooth()+
facet_wrap(~Tree)+
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% #filter(Tree != "2") %>%
ggplot(aes(age,circumference))+
geom_point()+
geom_smooth()+
facet_wrap(~Tree)+
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% #filter(Tree != "2") %>%
ggplot(aes(age,circumference))+
geom_point()+
geom_smooth()+
#facet_wrap(~Tree)+ # This graph is harder to compare in this case
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% #filter(Tree != "2") %>%
ggplot(aes(age,circumference, colour="Tree"))+
geom_point()+
geom_smooth()+
#facet_wrap(~Tree)+ # This graph is harder to compare in this case
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% #filter(Tree != "2") %>%
ggplot(aes(age,circumference, colour=Tree))+
geom_point()+
geom_smooth()+
#facet_wrap(~Tree)+ # This graph is harder to compare in this case
theme_bw()+
labs(title="Tree age and circumference")
Orange %>% #filter(Tree != "2") %>%
ggplot(aes(age,circumference, colour=Tree))+
geom_point()+
geom_smooth(se=F)+
#facet_wrap(~Tree)+ # This graph is harder to compare in this case
theme_bw()+
labs(title="Tree age and circumference")
sub("a","c",x)
x <- "aaaabbbbb"
sub("a","c",x)
?sub
grep(x,"a","c")
grep(x,"a")
grep("a",x)
gsub("a",'c',x)
gsub("a|b",'c',x) # changes all appearances
gsub('a|b','c',x) # changes all appearances and allows regex
library(tidyverse)
# Density plot (1 categorical and one numeric)
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_histogram()
# (1 categorical and one numeric)
# Histogram
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_histogram()+
facet_wrap(~vore)
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total,fill=vore))+
geom_density()+
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total,fill=vore))+
geom_density()
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total,fill=vore))+
geom_density()
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total,fill=vore))+
geom_density()
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/GGplotPractice2.R")
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total,fill=vore))+
geom_density()
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total, fill=vore))+
geom_density()
rlang::last_trace()
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total, fill = vore))+
geom_density()
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/GGplotPractice2.R")
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total, fill = vore))+
geom_density(alpha=0.5)
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total, fill = vore))+
geom_density(alpha=0.5)
# (1 categorical and one numeric)
# Histogram
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_histogram()+
facet_wrap(~vore)
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total, fill = vore))+
geom_density(alpha=0.5)
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density(alpha=0.5)
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/GGplotPractice2.R")
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density(alpha=0.5)
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/GGplotPractice2.R")
e
# (1 categorical and one numeric)
# Histogram
msleep %>% drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_histogram()+
facet_wrap(~vore)
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density(alpha=0.5)
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density(alpha=0.5)
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density(alpha=0.5)
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total, fill = vore))+
geom_density()+
facet_wrap(~vore)+
# OR USING COLOUR INSTEAD:
msleep %>%
drop_na(vore) %>%
ggplot(aes(sleep_total))+
geom_density(alpha=0.5)
rlang::last_trace()
cor(df$`Altitude (km)`, df$`Velocity (km/s)`, method = "pearson", use = "complete.obs")
lm_model <- lm(`Velocity (km/s)` ~ `Altitude (km)`, data = df_clean)
summary(lm_model)
altvsVeloc <- ggplot(df, aes(x = `Altitude (km)`, y = `Velocity (km/s)`)) +
geom_point(color = "blue", alpha = 0.7) +  # Scatter points
labs(title = "Altitude vs. Velocity of Meteorites", x = "Altitude (km)", y = "Velocity (km/s)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm", color = "black", se = FALSE) +
geom_smooth(color="darkgreen",method = "loess")
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/DataAnalysisFile.R")
altvsVeloc <- ggplot(df, aes(x = `Altitude (km)`, y = `Velocity (km/s)`)) +
geom_point(color = "blue", alpha = 0.7) +  # Scatter points
labs(title = "Altitude vs. Velocity of Meteorites", x = "Altitude (km)", y = "Velocity (km/s)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm", color = "black", se = FALSE) +
geom_smooth(color="darkgreen",method = "loess")
altvsVeloc
df_clean <- df %>% drop_na(`Velocity (km/s)`,`Altitude (km)`)
df_clean <- df %>% drop_na(`Velocity (km/s)`,`Altitude (km)`)
select(`Velocity (km/s)`,`Altitude (km)`) %>%
filter(!is.na(`Velocity (km/s)`), !is.na(`Altitude (km)`)) %>%
view()
df_clean <- df %>%
drop_na(`Velocity (km/s)`,`Altitude (km)`) %>%
select(`Velocity (km/s)`,`Altitude (km)`) %>%
filter(!is.na(`Velocity (km/s)`), !is.na(`Altitude (km)`)) %>%
view()
altvsVeloc <- df_clean %>%
ggplot(aes(x = `Altitude (km)`, y = `Velocity (km/s)`)) +
geom_point(color = "blue", alpha = 0.7) +  # Scatter points
labs(title = "Altitude vs. Velocity of Meteorites", x = "Altitude (km)", y = "Velocity (km/s)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm", color = "black", se = FALSE) +
geom_smooth(color="darkgreen",method = "loess")
altvsVeloc
lm_model <- lm(`Velocity (km/s)` ~ `Altitude (km)`, data = df_clean)
summary(lm_model)
cor(df$`Altitude (km)`, df$`Velocity (km/s)`, method = "pearson", use = "complete.obs")
?lm
View(heatmap2)
smooth_model <- gam(`Velocity (km/s)` ~ `Altitude (km)`, data = df_clean)
smooth_model <- randomForest(`Velocity (km/s)` ~ `Altitude (km)`, data = df_clean)
library(randomForest)
install.packages(randomForest)
source("~/Desktop/MMATH/Semester 1/MPS/Project 1/DataAnalysisFile.R")
library(randomForest)
smooth_model <- randomForest(`Velocity (km/s)` ~ `Altitude (km)`, data = df_clean)
